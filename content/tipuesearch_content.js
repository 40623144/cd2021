var tipuesearch = {"pages": [{'title': 'About', 'text': '班級:四設計四甲 \n 學號:40623144 \n 姓名:林昭權 \n 個人倉儲 \n stage-1 \n 分組倉儲 \n stage-2 \n 分組倉儲 \n stage-3 \n 分組倉儲 \n', 'tags': '', 'url': 'About.html'}, {'title': 'stage-1-bg23', 'text': '組員:40723224 \n 組員倉儲 \n 組員網站 \n', 'tags': '', 'url': 'stage-1-bg23.html'}, {'title': 'stage-2-bg8', 'text': '組員:40723224 \n 組員倉儲 \n 組員網站 \n 組員: 40423155 \n 組員倉儲 \n 組員網站 \n 組員:40823223 \n 組員倉儲 \n 組員網站 \n', 'tags': '', 'url': 'stage-2-bg8.html'}, {'title': 'stage-3-bg7', 'text': '組員:40723224 \n 組員倉儲 \n 組員網站 \n 組員: 40423155 \n 組員倉儲 \n 組員網站 \n 組員:40823223 \n 組員倉儲 \n 組員網站 \n 組員:40823227 \n 組員倉儲 \n 組員網站 \n 組員:40723233 \n 組員倉儲 \n 組員網站 \n', 'tags': '', 'url': 'stage-3-bg7.html'}, {'title': 'week', 'text': '每周進度 \n week1 \n week2 \n week3 \n week4 \n week5 \n week6 \n week7 \n week8 \n week9 \n', 'tags': '', 'url': 'week.html'}, {'title': 'week1', 'text': '建立倉儲 cd2021 \n 1.到達老師倉儲下的cmstemplate，點選use this template \n 2.將名稱取為cd2021即可 \n debug leo \n 1.到Y槽的home_ipv6裡的.leo的資料夾 \n 2.新增.leoID.txt \n 3.在\xa0 .leoID.txt輸入leo即可 \n 4.新增第一週影片 \n', 'tags': '', 'url': 'week1.html'}, {'title': 'week2~4', 'text': 'week2 \n week3 \n week4 \n', 'tags': '', 'url': 'week2~4.html'}, {'title': 'week2', 'text': '1.討論題目 \n 原本題目打算選擇火車頭，但是後來發現已經有人選擇了，所以就改成了簡易自行車。 \n 2.討論使用的程式 \n 繪圖上使用onshape，因為比較容易進行同步改版。 \n 3.進行網站維護 \n 新增第二週影片 \n 整理網站排序 \n', 'tags': '', 'url': 'week2.html'}, {'title': 'week3', 'text': '利用 CoppeliaSim進行模擬 \n 模擬步驟 \n 1.開啟想要模擬的檔案 \n File>Import>Mesh \n \n \n \n 2.移動到想要的位置 \n Object/item shift \n \n 將移動方向設為Z軸 \n \n 將組合件拉至不會跟地板干涉 \n \n 3.將組合件拆成多個零件 \n 對組合件按右鍵 Edit>Grouping/Merging>Divide selected shape \n \n 4.將兩個踏板合成一個零件 \n 按住shift點選兩個踏板>按右鍵 Edit>Grouping/Merging>Merge selected shape \n \n 5.新增旋轉軸 \n 在空白處點選右鍵>Add>Joint>Revolute \n \n 6.將旋轉軸定位並給予轉速 \n 按住shift點選前輪和旋轉軸> 點選Object/item Translation>Position>Apply to selection \n \n \n 點選旋轉軸>Object/item Rotation/Orientation>Rotation>Own frame>在X軸輸入90>Rotate selection \n \n 點兩下旋轉軸名稱前的圖示>Show dynamic properties dialog \n 如果旋轉軸太小的話，可以修改Length(長度)跟Diameter(直徑) \n \n 將Motor properties和Lock motor when target velocity is zero打勾，並賦予速度 \n \n 7.幫後輪跟踏板加上旋轉軸 \n 將旋轉軸複製兩根，並分配給後輪跟踏板 \n \n 按住shift點選後輪和第二根旋轉軸> 點選Object/item Translation>Position>Apply to selection \n \n 按住shift點選踏板和第三根旋轉軸> 點選Object/item Translation>Position>Apply to selection \n \n 8.零件組合 \n 將前輪、後輪、踏板家道各自的旋轉軸分支下 \n \n 按住shift點選不在旋轉軸分支下的零件>按右鍵 Edit>Grouping/Merging>Merge selected shape \n \n 再將三個旋轉軸加到組合件的分支下 \n \n 9.設定動態特性 \n 點兩下組合件名稱前的圖示>Show dynamic properties dialog \n \n 勾選Body is dynarnic \n 點兩下前輪、後輪、踏板名稱前的圖示>Show dynamic properties dialog \n \n 勾選Body is resp ondable和Body is dynarnic \n \n 10.進行模擬 \n \n', 'tags': '', 'url': 'week3.html'}, {'title': 'week4', 'text': '第一階段報告 \n \n', 'tags': '', 'url': 'week4.html'}, {'title': 'week5~9', 'text': 'week5 \n week6 \n week7 \n week8 \n week9 \n', 'tags': '', 'url': 'week5~9.html'}, {'title': 'week5', 'text': '1.stage-2分組 \n 2.整理乙班影片 \n 在cmd裡輸入 pip install moviepy \n 到老師cd2021裡w4的最下面複製兩段程式碼到SciTE進行執行即可 \n', 'tags': '', 'url': 'week5.html'}, {'title': 'week6', 'text': '確定題目 \n 開始繪圖及收集資料 \n', 'tags': '', 'url': 'week6.html'}, {'title': 'week7', 'text': '確認繪圖進度 \n 查看參考資料思考如何模擬 \n', 'tags': '', 'url': 'week7.html'}, {'title': 'week8', 'text': '利用 CoppeliaSim進行模擬，但在模擬時萬用軸並沒有照著軌道的路移動，而是在原地旋轉，再測試了一段時間後，還是沒有成功，所以就先交給另一位組員用soildworks模擬看看是否成功。 \n', 'tags': '', 'url': 'week8.html'}, {'title': 'week9', 'text': '第二階段報告 期中報告 \n', 'tags': '', 'url': 'week9.html'}, {'title': 'week10~17', 'text': '', 'tags': '', 'url': 'week10~17.html'}, {'title': 'week10', 'text': '', 'tags': '', 'url': 'week10.html'}, {'title': 'week11', 'text': '', 'tags': '', 'url': 'week11.html'}, {'title': 'week12', 'text': '', 'tags': '', 'url': 'week12.html'}, {'title': 'week13', 'text': 'RoboDk 機械手臂 \n 模擬影片 \n 程式 \n from robolink import *\nfrom robodk import *\n\nimport os\n\ndir_path = os.path.dirname(os.path.realpath(__file__))\nprint(dir_path)\n# Calculate pyramid coordinate\n\n# Setup global parameters\nBALL_DIAMETER = 100 # diameter of one ball\nAPPROACH = 100 # approach distance to grab each part, in mm\nnTCPs = 6 # number of TCP\'s in the tool\n\ndef pyramid_calc(BALLS_SIDE=4):\n"""Calculate a list of points (ball center) as if the balls were place in a pyramid"""\n#the number of balls can be calculated as: int(BALLS_SIDE*(BALLS_SIDE+1)*(2*BALLS_SIDE+1)/6)\n#BALL_DIAMETER = 100\nxyz_list = []\nsqrt2 = 2**(0.5)\nfor h in range(BALLS_SIDE):\nfor i in range(BALLS_SIDE-h):\nfor j in range(BALLS_SIDE-h):\nheight = h*BALL_DIAMETER/sqrt2 + BALL_DIAMETER/2\nxyz_list = xyz_list + [[i*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, j*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, height]]\nreturn xyz_list\n\ndef TCP_On(toolitem, tcp_id):\n"""Attach the closest object to the toolitem Htool pose,\nfurthermore, it will output appropriate function calls on the generated robot program (call to TCP_On)"""\ntoolitem.AttachClosest()\ntoolitem.RDK().RunMessage(\'Set air valve %i on\' % (tcp_id+1))\ntoolitem.RDK().RunProgram(\'TCP_On(%i)\' % (tcp_id+1));\n\ndef TCP_Off(toolitem, tcp_id, itemleave=0):\n"""Detaches the closest object attached to the toolitem Htool pose,\nfurthermore, it will output appropriate function calls on the generated robot program (call to TCP_Off)"""\ntoolitem.DetachAll(itemleave)\ntoolitem.RDK().RunMessage(\'Set air valve %i off\' % (tcp_id+1))\ntoolitem.RDK().RunProgram(\'TCP_Off(%i)\' % (tcp_id+1));\n\n# Make a list of positions to place the objects\nballs_list = pyramid_calc(4)\n\n#print(len(frame1_list))\n# 4*4 = 16\n# 3*3 = 9\n# 2*2 = 4\n# 1+4+9+16 = 30\n\n# height 50*sqrt(2)\n\'\'\'\n[\n\n[50.0, 50.0, 50.0], [50.0, 150.0, 50.0], [50.0, 250.0, 50.0], [50.0, 350.0, 50.0],\n\n[150.0, 50.0, 50.0], [150.0, 150.0, 50.0], [150.0, 250.0, 50.0], [150.0, 350.0, 50.0],\n\n[250.0, 50.0, 50.0], [250.0, 150.0, 50.0], [250.0, 250.0, 50.0], [250.0, 350.0, 50.0],\n\n[350.0, 50.0, 50.0], [350.0, 150.0, 50.0], [350.0, 250.0, 50.0], [350.0, 350.0, 50.0],\n\n\n[100.0, 100.0, 120.71067811865474], [100.0, 200.0, 120.71067811865474], [100.0, 300.0, 120.71067811865474],\n\n[200.0, 100.0, 120.71067811865474], [200.0, 200.0, 120.71067811865474], [200.0, 300.0, 120.71067811865474],\n\n[300.0, 100.0, 120.71067811865474], [300.0, 200.0, 120.71067811865474], [300.0, 300.0, 120.71067811865474],\n\n\n[150.0, 150.0, 191.42135623730948], [150.0, 250.0, 191.42135623730948],\n\n[250.0, 150.0, 191.42135623730948], [250.0, 250.0, 191.42135623730948],\n\n\n[200.0, 200.0, 262.13203435596427]\n\n]\n\n\'\'\'\n# https://github.com/RoboDK/RoboDK-API/blob/master/Python/robolink.py\n# robodk_path variable to specify location of RoboDK.exe\n# under Ubuntu can not use "-NEWINSTANCE"\n\'\'\'\nstart_robodk.sh content\nLD_LIBRARY_PATH="/home/yen/RoboDK/bin/lib"\nexport LD_LIBRARY_PATH\n/home/yen/RoboDK/bin/RoboDK\n\'\'\'\nRDK = Robolink(robodk_path=r"Y:\\robodk522_portable\\bin\\RoboDK.exe",args=["-SKIPINI", "-EXIT_LAST_COM"])\n# Add robot and the accompanied Base coordinate\nprint(dir_path + \'/Fanuc-M-710iC-50.robot\')\n# relative directory or absolute directory will work for AddFile under Ubuntu\n#robot = RDK.AddFile(r"/home/yen/github/wcm2021/downloads/robodk/pick_and_place_kmol_mac/Fanuc-M-710iC-50.robot")\nrobot = RDK.AddFile(\'Fanuc-M-710iC-50.robot\')\n# Get the default robot base frame\nrobot_frame = RDK.Item(\'Fanuc M-710iC/50 Base\')\n# Move the base frame to the origin\nrobot_frame.setPose(transl(0,0,0))\n\n# Add a tool to an existing robot:\ntool = RDK.AddFile(dir_path + \'/MainTool.tool\', robot)\n\n# Add table 1\ntable1_frame = RDK.AddFrame(\'Table 1\')\ntable1_frame.setPose(transl(807.766544,-963.699898,41.478944))\ntable1_stl = RDK.AddFile(dir_path + \'/Table.stl\', table1_frame)\n\n# Add table 2\ntable2_frame = RDK.AddFrame(\'Table 2\')\ntable2_frame.setPose(transl(926.465508,337.151529,94.871928))\ntable2_stl = RDK.AddFile(dir_path + \'/Table.stl\', table2_frame)\n\n# Calculate tool frames for the suction cup tool of 6 suction cups\nTCP_list = []\nfor i in range(nTCPs):\nTCPi_pose = transl(0,0,100)*rotz((360/nTCPs)*i*pi/180)*transl(125,0,0)*roty(pi/2)\nTCPi = robot.AddTool(TCPi_pose, \'TCP %i\' % (i+1))\nTCP_list.append(TCPi)\n\nTCP_0 = TCP_list[0]\n\n# Turn on automatic rendering\nRDK.Render(True)\n\n# Add balls\n# create a list with 30 elements\nballs = [None for _ in range(30)]\nlayer = [16, 9, 4, 1]\ncount = 0\nfor i in range(len(balls_list)):\n# transl(balls_list)\nballs[i] = RDK.AddFile(\'./ball.stl\', table1_frame)\nballs[i].setPose(transl(balls_list[i]))\ncount = count + 1\nif count <= 16:\nballs[i].setColor([1, 0, 0])\nelif count > 16 and count <= 25:\nballs[i].setColor([0, 1, 0])\nelif count > 25 and count <=29:\nballs[i].setColor([1, 1, 0])\nelse:\nballs[i].setColor([0, 0, 1])\n\n# Make a list of positions to place the objects\n# ball_list is the same as frame1_list\nframe1_list = pyramid_calc(4)\nframe2_list = pyramid_calc(4)\n\n# Move balls\nrobot.setPoseTool(TCP_list[0])\nnballs_frame1 = len(frame1_list)\nnballs_frame2 = len(frame2_list)\nidTake = nballs_frame1 - 1\nidLeave = 0\nidTCP = 0\n\ntarget_app_frame = transl(2*BALL_DIAMETER, 2*BALL_DIAMETER, 4*BALL_DIAMETER)*roty(pi)*transl(0,0,-APPROACH)\n\n# frame1 is the same as table1_frame\nframe1 = RDK.Item(\'Table 1\')\nframe2 = RDK.Item(\'Table 2\')\n\nwhile idTake >= 0:\n# ------------------------------------------------------------------\n# first priority: grab as many balls as possible\n# the tool is empty at this point, so take as many balls as possible (up to a maximum of 6 -> nTCPs)\nntake = min(nTCPs, idTake + 1)\n\n# approach to frame 1\nrobot.setPoseFrame(frame1)\nrobot.setPoseTool(TCP_0)\nrobot.MoveJ([0,0,0,0,10,-200])\nrobot.MoveJ(target_app_frame)\n\n# grab ntake balls from frame1\nfor i in range(ntake):\nTCPi = TCP_list[i]\nrobot.setPoseTool(TCPi)\n# calculate target wrt frame1: rotation about Y is needed since Z and X axis are inverted\ntarget = transl(frame1_list[idTake])*roty(pi)*rotx(30*pi/180)\ntarget_app = target*transl(0,0,-APPROACH)\nidTake = idTake - 1\nrobot.MoveL(target_app)\nrobot.MoveL(target)\nTCP_On(TCPi, i)\nrobot.MoveL(target_app)\n\n# ------------------------------------------------------------------\n# second priority: unload the tool\n# approach to frame2 and place the tool balls into table2\nrobot.setPoseTool(TCP_0)\nrobot.MoveJ(target_app_frame)\nrobot.MoveJ([0,0,0,0,10,-200])\nrobot.setPoseFrame(frame2)\nrobot.MoveJ(target_app_frame)\nfor i in range(ntake):\nTCPi = TCP_list[i]\nrobot.setPoseTool(TCPi)\nif idLeave > nballs_frame2-1:\nraise Exception("No room left to place objects in Table 2")\n\n# calculate target wrt frame1: rotation of 180 about Y is needed since Z and X axis are inverted\ntarget = transl(frame2_list[idLeave])*roty(pi)*rotx(30*pi/180)\ntarget_app = target*transl(0,0,-APPROACH)\nidLeave = idLeave + 1\nrobot.MoveL(target_app)\nrobot.MoveL(target)\nTCP_Off(TCPi, i, frame2)\nrobot.MoveL(target_app)\n\nrobot.MoveJ(target_app_frame)\n\n# Move home when the robot finishes\nrobot.MoveJ([0,0,0,0,10,-200]) \n \n', 'tags': '', 'url': 'week13.html'}, {'title': 'week14', 'text': 'tesk1 \n \n def stu2b(account):\n return account\nteamb = []\n  \nwith open("stage3_2b.txt") as fh:     #讀取stage3_2b的檔案\n    data = fh.readlines()\n    data = [a.replace(\'40823231\',\'40823231-2\') for a in data]      #將40823231換成40823231-2\n    data = [a.replace(\'407\',\'s407\') for a in data]     #將有407的學號換成s407\n \nfor i in range(len(data)):     #數據中會有\\n跟\\t，將\\n跟\\t去除\n    group = data[i].rstrip("\\n").split("\\t")\n    teamb.append(group)\n      \noutput = ""    \nseperator = "-"*10 + "</br>"     #分隔號製作\n  \nfor i in teamb[0:]:    #小組 組長 其他六個組員\n    team = i[0]\n    leader = stu2b(i[1])\n    m1 = stu2b(i[3])\n    m2 = stu2b(i[5])\n    m3 = stu2b(i[7])\n    m4 = stu2b(i[9])\n    m5 = stu2b(i[11])\n    m6 = stu2b(i[13])\n \n          \n    leaderrepo = "<a href=\'http://github.com/" + leader + "/cd2021\'>" + leader + " repo</a>"    #組長以及組員的倉儲和網站\n    leadersite = "<a href=\'http://" + leader + ".github.io/cd2021\'>" + leader +  " site</a>"\n    m1repo = "<a href=\'http://github.com/" + m1 + "/cd2021\'>" + m1 + " repo</a>"\n    m1site = "<a href=\'http://" + m1 + ".github.io/cd2021\'>" + m1 +  " site</a>"\n    m2repo = "<a href=\'http://github.com/" + m2 + "/cd2021\'>" + m2 + " repo</a>"\n    m2site = "<a href=\'http://" + m2 + ".github.io/cd2021\'>" + m2 +  " site</a>"\n    m3repo = "<a href=\'http://github.com/" + m3 + "/cd2021\'>" + m3 + " repo</a>"\n    m3site = "<a href=\'http://" + m3 + ".github.io/cd2021\'>" + m3 +  " site</a>"\n    m4repo = "<a href=\'http://github.com/" + m4 + "/cd2021\'>" + m4 + " repo</a>"\n    m4site = "<a href=\'http://" + m4 + ".github.io/cd2021\'>" + m4 +  " site</a>"\n    m5repo = "<a href=\'http://github.com/" + m5 + "/cd2021\'>" + m5 + " repo</a>"\n    m5site = "<a href=\'http://" + m5 + ".github.io/cd2021\'>" + m5 +  " site</a>"\n    m6repo = "<a href=\'http://github.com/" + m6 + "/cd2021\'>" + m6 + " repo</a>"\n    m6site = "<a href=\'http://" + m6 + ".github.io/cd2021\'>" + m6 +  " site</a>"\n   \n  \n    teamrepo = "<a href=\'http://github.com/" + leader + "/" + team + "\'>" + team + " repo</a>"     #小組的倉儲含網站\n    teamsite =  "<a href=\'http://" + m1 + ".github.io/" + team + "\'>" + team +  " site</a>"\n  \n    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site \n      \n           \n    try:\n        m7 = stu2b(i[15])     #第七個組員\n    except:\n        m7 = ""\n    try:\n        m8 = stu2b(i[17])     #第八個組員\n    except:\n        m8 = ""\n         \n    if m7 != "":\n       m7repo = "<a href=\'http://github.com/" + m7 + "/cd2021\'>" + m7 + " repo</a>"     #如果有第七個組員會再加倉儲和網站沒有的話就空白\n       m7site = "<a href=\'http://" + m7 + ".github.io/cd2021\'>" + m7 +  " site</a>"  \n       output += " |  " + m7repo + "| " + m7site\n    else:\n        output += "" \n      \n    if m8 != "":\n       m8repo = "<a href=\'http://github.com/" + m8 + "/cd2021\'>" + m8 + " repo</a>"     #如果有第八個組員會再加倉儲和網站最後再加分隔線\n       m8site = "<a href=\'http://" + m8 + ".github.io/cd2021\'>" + m8 +  " site</a>"  \n       output += " |  " + m8repo + "| " + m8site + "<br />" + seperator\n    else:\n        output += "<br />" + seperator\n  \n  \nprint(output)     #輸出 \n', 'tags': '', 'url': 'week14.html'}, {'title': 'week15', 'text': '', 'tags': '', 'url': 'week15.html'}, {'title': 'week16', 'text': 'W16_exam連結: https://drive.google.com/file/d/1kWsZCiIKhfXVMegRBYjEfNoNJC0pKnRm/view \n Onshape 零組件連結: https://cad.onshape.com/documents/cf2463a58b9a1bed47aa230b/w/94d483d0735da6a526471e53/e/bd5cab47bc24898d1cabe337 \n 建立CoppeliaSim 4.1.0 MTB robot場景: \n 手臂末端加入components-gripper-suction pad吸盤: \n 逆向運動學函式: \n \n Python remote API 逆向運動學函式:', 'tags': '', 'url': 'week16.html'}, {'title': 'week17', 'text': '', 'tags': '', 'url': 'week17.html'}, {'title': '影片', 'text': '', 'tags': '', 'url': '影片.html'}, {'title': '第一週', 'text': '\n', 'tags': '', 'url': '第一週.html'}, {'title': '第二週', 'text': '\n', 'tags': '', 'url': '第二週.html'}, {'title': '第三週', 'text': '\n', 'tags': '', 'url': '第三週.html'}, {'title': '第四週', 'text': '\n', 'tags': '', 'url': '第四週.html'}, {'title': '第五週', 'text': '\n', 'tags': '', 'url': '第五週.html'}, {'title': '第六週', 'text': '\n', 'tags': '', 'url': '第六週.html'}, {'title': '第七週', 'text': '\n', 'tags': '', 'url': '第七週.html'}, {'title': '第八週', 'text': '\n', 'tags': '', 'url': '第八週.html'}, {'title': '第九週', 'text': '\n', 'tags': '', 'url': '第九週.html'}, {'title': '第十週', 'text': '', 'tags': '', 'url': '第十週.html'}, {'title': '第十一週', 'text': '直播 \n \n', 'tags': '', 'url': '第十一週.html'}, {'title': '第十二週', 'text': '\n', 'tags': '', 'url': '第十二週.html'}, {'title': '第十三週', 'text': '直播 \n \n \n 影片 \n \n', 'tags': '', 'url': '第十三週.html'}, {'title': '第十四週', 'text': '\n', 'tags': '', 'url': '第十四週.html'}, {'title': '第十五週', 'text': '直播 \n \n', 'tags': '', 'url': '第十五週.html'}, {'title': '問題', 'text': '', 'tags': '', 'url': '問題.html'}, {'title': 'stage-1', 'text': '問題:進行模擬時，因為輪胎和地面接觸面積不夠導致還沒向前進，就向側面倒了。 \n 解決辦法:在onshape上修改，增加輪胎與地面的接觸面積。 \n', 'tags': '', 'url': 'stage-1.html'}, {'title': 'stage-2', 'text': '問題1:萬用軸的尺寸有誤，因此與軌道互相干涉 \n 解決辦法:在onshape上修改，將萬用軸的尺寸修改 \n \n 問題2:在模擬時門板掉落，門板跟萬象軸沒有組合 \n 解決辦法:請繪圖人員進行修改 \n \n 問題3:萬用輪會空轉，不會照著軌道跑 \n 解決辦法:尚未解決，先請另一位同學使用soildworks模擬看看是否成功。 \n', 'tags': '', 'url': 'stage-2.html'}, {'title': 'W5', 'text': '', 'tags': '', 'url': 'W5.html'}]};